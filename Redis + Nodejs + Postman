// importa biblioteca do servidor express
var express = require('express');
// importa biblioteca do redis
var redis = require('redis');
// cria instância do express
var app = express();
// cria instância do cliente redis
var client = redis.createClient();

client.on('connect', function() {
	console.log('Redis client connected');
});

client.on('error', function (err) {
	console.log('Something went wrong ' + err);
});

app.get('/', function (req, res) {
	// pega o valor do redis
	client.get('first_time_visitor', function (error, result) {
		if (error) {
			console.log(error);
			throw error;
		}
		console.log(result);
		if (result == null || result == 1) {
			// seta o valor no redis
			client.set('first_time_visitor', 0, redis.print);
			res.send('Hello new visitor!');
		} else {
			res.send('Hello visitor!' + result);
		}
	});
});

app.get('/cart/id:', function (req, res) {
	// seta o valor do redis
	//client.get('string2', redis.print);
	var msgid = req.params.id;
	console.log('log-code 0000 :::     msgid : '+ msgid);
	res.send('obtida /cart/var!' +);
});

//app.get('/cart/', function (req, res) {
	// seta o valor do redis
//	client.get('string2', redis.print);
//	res.send('obtida /cart/string2!');
//});

app.post('/', function (req, res) {
	// seta o valor do redis
	client.set('string1', 'this is another thing', redis.print);
	res.send('deu mais certo!');
});
app.post('/cart/', function (req, res) {
	// seta o valor do redis
	client.set('string2', 'valor string 2', redis.print);
	res.send('criada string2!');
});
app.delete('/', function (req, res) {
	// seta o valor do redis
	client.del('string1', redis.print);
	// client.del('string1', 'this is another thing', redis.print);
	res.send('deu mais certo com o delete!');
});
app.delete('/cart/', function (req, res) {
	// seta o valor do redis
	client.del('string2', redis.print);
	// client.del('string1', 'this is another thing', redis.print);
	res.send('delete /cart/string2!');
});

app.listen(3000, function () {
  console.log('Example app listening on port 3000!');
});
